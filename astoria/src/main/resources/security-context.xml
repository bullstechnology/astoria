<?xml version="1.0" encoding="UTF-8"?>
    <beans:beans
        xmlns:sec="http://www.springframework.org/schema/security"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.0.xsd">

        <!-- Enable method level Spring Security by annotations  -->
        <sec:global-method-security pre-post-annotations="enabled" />
        <sec:http auto-config="true" use-expressions="true">

            <!-- Page level Spring Security : Intercept access to resources in /pages/secure/** -->
            <sec:intercept-url pattern="/pages/private/admin/**" access="hasRole('ROLE_MODERATOR')" />
            <sec:intercept-url pattern="/pages/private/main/**" access="hasRole('ROLE_MODERATOR',ROLE_ADMIN)" />

            <!-- Page level Spring Security : Permit access to resources in /pages/unsecure/** -->
            <sec:intercept-url pattern="/pages/public/**" access="permitAll"/>

            <!-- Page level Spring Security : Intercept access to resources in /** -->
           <!-- <sec:intercept-url pattern="/**" access="hasRole('ROLE_MODERATOR')"/> -->
           <sec:intercept-url pattern="/**" access="permitAll"/>

            <!-- Page level Spring Security : Enable Primefaces -->
            <sec:intercept-url pattern="/javax.faces.resource/**" access="permitAll"/>
      
            <!-- Define login page for Spring Security -->      
            <sec:form-login login-page="/pages/public/login.xhtml"/>

            <!-- Define logout properties for Spring Security -->
            <sec:logout invalidate-session="true" delete-cookies="true" logout-success-url="/"></sec:logout>
            <sec:csrf disabled ="true"/>
        </sec:http>
       
        <!-- Set customUserDetailsService class as the authentication Manager for Spring Security-->
        <sec:authentication-manager alias="authenticationManager">
            <sec:authentication-provider user-service-ref="customUserDetailsService">
                <sec:password-encoder hash="plaintext"></sec:password-encoder>
            </sec:authentication-provider>
        </sec:authentication-manager>

         <!-- Inject authentication Manager to our LoginBean -->
        <beans:bean id="loginBean" name="loginBean" class="com.bulls.astoria.magedbean.LoginBean" scope="prototype">
            <beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
        </beans:bean>
        
    </beans:beans>
